plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.4")
}

dependencies {
	implementation platform("software.amazon.awssdk:bom:2.25.36") // Usa la última versión estable

	// Cliente DynamoDB asincrónico (usado con WebFlux/Reactor)
	implementation "software.amazon.awssdk:dynamodb"
	implementation "software.amazon.awssdk:dynamodb-enhanced"

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.2.0'
	implementation 'io.github.resilience4j:resilience4j-reactor:2.2.0'
	implementation 'io.github.resilience4j:resilience4j-retry'
	implementation 'io.github.resilience4j:resilience4j-bulkhead'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.postgresql:r2dbc-postgresql'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
